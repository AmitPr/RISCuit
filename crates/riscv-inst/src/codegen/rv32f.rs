//! Autogenerated by riscv-inst-codegen
//! DO NOT EDIT

#[allow(unused_imports)]
use super::{FReg, Reg};
pub enum Rv32f {
    Flw(Flw),
    Fsw(Fsw),
    FmaddS(FmaddS),
    FmsubS(FmsubS),
    FnmsubS(FnmsubS),
    FnmaddS(FnmaddS),
    FaddS(FaddS),
    FsubS(FsubS),
    FmulS(FmulS),
    FdivS(FdivS),
    FsgnjS(FsgnjS),
    FsgnjnS(FsgnjnS),
    FsgnjxS(FsgnjxS),
    FminS(FminS),
    FmaxS(FmaxS),
    FsqrtS(FsqrtS),
    FleS(FleS),
    FltS(FltS),
    FeqS(FeqS),
    FcvtWS(FcvtWS),
    FcvtWuS(FcvtWuS),
    FcvtSW(FcvtSW),
    FcvtSWu(FcvtSWu),
    FmvXS(FmvXS),
    FclassS(FclassS),
    FmvSX(FmvSX),
}
pub struct Flw(pub u32);
impl Flw {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rs1(&self) -> Reg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn imm(&self) -> i32 {
        ((((self.0 >> 20) & 0b111111111111) << 21) as i32) >> 21
    }
}
pub struct Fsw(pub u32);
impl Fsw {
    #[inline]
    pub const fn rs1(&self) -> Reg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn imm(&self) -> i32 {
        (((((self.0 >> 20) & 0b111111100000) | ((self.0 >> 7) & 0b11111)) << 21)
            as i32)
            >> 21
    }
}
pub struct FmaddS(pub u32);
impl FmaddS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs3(&self) -> FReg {
        {
            let acc = (self.0 >> 27) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FmsubS(pub u32);
impl FmsubS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs3(&self) -> FReg {
        {
            let acc = (self.0 >> 27) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FnmsubS(pub u32);
impl FnmsubS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs3(&self) -> FReg {
        {
            let acc = (self.0 >> 27) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FnmaddS(pub u32);
impl FnmaddS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs3(&self) -> FReg {
        {
            let acc = (self.0 >> 27) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FaddS(pub u32);
impl FaddS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FsubS(pub u32);
impl FsubS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FmulS(pub u32);
impl FmulS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FdivS(pub u32);
impl FdivS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FsgnjS(pub u32);
impl FsgnjS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FsgnjnS(pub u32);
impl FsgnjnS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FsgnjxS(pub u32);
impl FsgnjxS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FminS(pub u32);
impl FminS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FmaxS(pub u32);
impl FmaxS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FsqrtS(pub u32);
impl FsqrtS {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FleS(pub u32);
impl FleS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FltS(pub u32);
impl FltS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FeqS(pub u32);
impl FeqS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs2(&self) -> FReg {
        {
            let acc = (self.0 >> 20) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FcvtWS(pub u32);
impl FcvtWS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FcvtWuS(pub u32);
impl FcvtWuS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FcvtSW(pub u32);
impl FcvtSW {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rs1(&self) -> Reg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FcvtSWu(pub u32);
impl FcvtSWu {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rs1(&self) -> Reg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rm(&self) -> u32 {
        (self.0 >> 12) & 0b111
    }
}
pub struct FmvXS(pub u32);
impl FmvXS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FclassS(pub u32);
impl FclassS {
    #[inline]
    pub const fn rd(&self) -> Reg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn frs1(&self) -> FReg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
}
pub struct FmvSX(pub u32);
impl FmvSX {
    #[inline]
    pub const fn frd(&self) -> FReg {
        {
            let acc = (self.0 >> 7) & 0b11111;
            unsafe { FReg::from_u5(acc as u8) }
        }
    }
    #[inline]
    pub const fn rs1(&self) -> Reg {
        {
            let acc = (self.0 >> 15) & 0b11111;
            unsafe { Reg::from_u5(acc as u8) }
        }
    }
}
